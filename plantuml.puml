@startuml
package Usuario{
class Guardarropas
class Usuario
interface Interaccion
class BajaPrenda
class AltaPrenda
class Compartir
}
package Prenda{
    class Prenda
    enum Material
    enum TipoPrenda
    enum Categoria
    enum Color
    enum Trama
}
package Sugerencia{
    class GeneradorDeAtuendos
    class Atuendo
    package Clima{
        class AccuWeather
        class AccuWeatherAPI
        interface Clima
        class MockClima
    }
    package Filtros{
        interface Filtro
        class FiltroTemperatura
        class FiltroAtuendoCompleto
    }
}



class Prenda{
    +aptaParaTemperatura(double Temp):boolean
    +recomendarAgregar(Usuario, Guardarropa):void
    +recomendarQuitar(Usuario, Guardarropa):void
}
Prenda --> Material
Prenda --> TipoPrenda
Prenda --> "1..2" Color
Prenda --> Trama
TipoPrenda --> Categoria

enum Color{
}
enum Material{
}
enum Categoria{
SUPERIOR
INFERIOR
CALZADO
ACCESORIO
}
enum TipoPrenda {
ZAPATO
PANTALON
REMERA
RELOJ
...
+getCategoria():Categoria
}
class MockClima implements Clima{
-cantidadLlamados:Integer
+getTemperatura(String Ciudad):double
-puedoHacerLlamado():Boolean
}
AccuWeather --> AccuWeatherAPI
interface Clima{
+getTemperatura(String Ciudad):double
}
class AccuWeather implements Clima{
-cantidadLlamados:Integer
+getTemperatura(String Ciudad):double
-puedoHacerLlamado():Boolean
}
class AccuWeatherAPI{
+getWeather(String ciudad):List<Map<String, Object>>
}

FiltroAtuendoCompleto --> Categoria
FiltroTemperatura --> Clima
interface Filtro{
+filtrar(List<Atuendo> atuendos):List<Atuendo>
}
class FiltroTemperatura implements Filtro{
+filtrar(List<Atuendo> atuendos):List<Atuendo>
}
class FiltroAtuendoCompleto implements Filtro{
+filtrar(List<Atuendo> atuendos):List<Atuendo>
-estaCompleto(Atuendo atuendo):Boolean
}
GeneradorDeAtuendos --> "1..*" Filtro
GeneradorDeAtuendos --> "*" Atuendo
Atuendo --> "4..*" Prenda
Guardarropas --> "*" Prenda
Guardarropas --> GeneradorDeAtuendos

class Guardarropas{
-descripcion:String
generador: GeneradorDeAtuendos
+pedirSugerencias():List<Atuendo>
+elegirAtuendo():void
+agregarPrenda(Prenda)
+quitarPrenda(Prenda)
}

class GeneradorDeAtuendos{
+combinar(List<Prenda> prendas):List<Atuendo>
+filtrar(List<Atuendo> atuendos):List<Atuendo>
}
Usuario --> "*" Guardarropas
Usuario -d-> "*" Interaccion
class Usuario{
-userID:Integer
+nuevoGuardarropas()
+compartirCon(Usuario)
+dejarDeCompartirCon(Usuario)
+sugerirQuitarPrenda(Prenda,Guardarropas)
+sugerirAgregarPrenda(Prenda,Guardarropas)
}
interface Interaccion{
+aceptar()
+revertir()
}
class BajaPrenda implements Interaccion{
    -prenda:Prenda
    -guardarropa:Guardarropa
    -aceptada:Boolean
}
class AltaPrenda implements Interaccion{
    -prenda:Prenda
    -guardarropa:Guardarropa
    -aceptada:Boolean
}
class Compartir implements Interaccion{
    -guardarropa:Guardarropa
    -usuario:Usuario
}
@enduml